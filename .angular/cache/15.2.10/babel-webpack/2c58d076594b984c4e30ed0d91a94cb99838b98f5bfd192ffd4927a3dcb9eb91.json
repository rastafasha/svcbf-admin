{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DirregionalService = /*#__PURE__*/(() => {\n  class DirregionalService {\n    constructor(http) {\n      this.http = http;\n      this.serverUrl = environment.baseUrl;\n    }\n    getDirRegionals() {\n      return this.http.get(this.serverUrl + 'api_dirregional/adminDirregionals/').pipe(catchError(this.handleError));\n    }\n    getDirRegional(id) {\n      return this.http.get(this.serverUrl + 'api_dirregional/adminDirregional/' + id).pipe(catchError(this.handleError));\n    }\n    createDirRegional(dirregional) {\n      return this.http.post(this.serverUrl + 'api_dirregional/createDirregional/', dirregional).pipe(catchError(this.handleError));\n    }\n    updateDirRegional(dirregional, id) {\n      return this.http.post(this.serverUrl + 'api_dirregional/updateDirregional/' + id, dirregional).pipe(catchError(this.handleError));\n    }\n    deleteDirRegional(id) {\n      return this.http.delete(this.serverUrl + 'api_dirregional/deleteDirregional/' + id).pipe(catchError(this.handleError));\n    }\n    handleError(error) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n      }\n      // return an observable with a user-facing error message\n      return throwError('Something bad happened. Please try again later.');\n    }\n  }\n  DirregionalService.ɵfac = function DirregionalService_Factory(t) {\n    return new (t || DirregionalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  DirregionalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DirregionalService,\n    factory: DirregionalService.ɵfac,\n    providedIn: 'root'\n  });\n  return DirregionalService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}